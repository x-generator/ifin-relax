-- SET PASSWORD FOR USER: SA
ALTER USER SA SET PASSWORD '!OPrime7817';

-- TABLE: USER
DROP TABLE IF EXISTS USER;

CREATE TABLE USER
(
  ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  EMAIL VARCHAR(25) NOT NULL UNIQUE,
  FIRSTNAME VARCHAR(15) NOT NULL,
  LASTNAME VARCHAR(15) NOT NULL,
  PASSWORD VARCHAR(256) NOT NULL
);

INSERT INTO USER
(
  ID,
  EMAIL,
  FIRSTNAME,
  LASTNAME,
  PASSWORD
)
VALUES
(
  1,
  'email@g.com',
  'Optimus',
  'Prime',
  '$2a$10$NBApcldYImBkSCppXx00reQxs3z.kU4nk0upidd20U0LT2rVW0uJG'
);

-- TABLE: ROLE
DROP TABLE IF EXISTS ROLE;

CREATE TABLE ROLE
(
  ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  ROLENAME VARCHAR(10) NOT NULL UNIQUE
);

INSERT INTO ROLE
(
  ID,
  ROLENAME
)
VALUES
(
  1,
  'ROLE_ADMIN'
),
(
  2,
  'ROLE_USER'
);

-- TABLE: USER_ROLE
DROP TABLE IF EXISTS USER_ROLE;

CREATE TABLE USER_ROLE
(
  USER_ID INTEGER NOT NULL,
  ROLES_ID INTEGER NOT NULL,
  CONSTRAINT CONSTRAINT_B PRIMARY KEY (USER_ID, ROLES_ID),
  CONSTRAINT FK_DV4W2XNI693CG4IBI3FO1FKK6 FOREIGN KEY (USER_ID) REFERENCES USER (ID),
  CONSTRAINT FK_TC5K40I3KIT8944SYRD366VY1 FOREIGN KEY (ROLES_ID) REFERENCES ROLE (ID)
);

INSERT INTO USER_ROLE
(
  USER_ID,
  ROLES_ID
)
VALUES
(
  1,
  '1'
);

-- TABLE: EXPENSE
DROP TABLE IF EXISTS EXPENSE;

CREATE TABLE EXPENSE (
  ID INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
  OBJECT VARCHAR(50) NOT NULL,
  AMOUNT INTEGER NOT NULL,
  CREATEDAT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  USERID INTEGER NOT NULL,
  FOREIGN KEY (USERID) REFERENCES USER (ID)
);

INSERT INTO EXPENSE
(
  ID,
  OBJECT,
  AMOUNT,
  USERID
)
VALUES
(
  1,
  'Test buing.',
  1000,
  1
);